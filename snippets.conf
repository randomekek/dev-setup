[Default]
bn={\n\t%cursor%\n}%cursor%
b={ %cursor% }%cursor%

[Special]
brace_open=\n{\n\t
brace_close=}\n
block={\n\t%cursor%\n}%cursor%
block_cursor={\n\t%cursor%\n}%cursor%
#wordchars=_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789

[PHP]
if=if (%cursor%) %block_cursor%
iff=%cursor% ? %cursor% : %cursor%
else=else %block_cursor%
for=for ($i=0, $n=%cursor%; $i < $n; $i++) %brace_open%%cursor%\n%brace_close%
foreach=foreach (%cursor% as %cursor%) %block_cursor%
while=while (%cursor%) %block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
try=try%block%\ncatch (%cursor%)%block_cursor%
dvd=die(var_dump(%cursor%));%cursor%
vd=var_dump(%cursor%);%cursor%

4=$
t=$this->
f=function%cursor%(%cursor%)\n{\n\t%cursor%\n}%cursor%
pf=public function%cursor%(%cursor%)\n{\n\t%cursor%\n}%cursor%
psf=public static function%cursor%(%cursor%)\n{\n\t%cursor%\n}%cursor%

array=array(\n\t%cursor%\n)%cursor%
object=(object) array(\n\t%cursor%\n)%cursor%
k='%cursor%' => %cursor%,%cursor%

pfor=<? for($i=0, $n=%cursor%; $i<$n; $i++) { ?>\n\t%cursor%\n<? } ?>
pelse=<? } else { ?>
pforeach=<? for($i=0, $n=%cursor%; $i<$n; $i++) { ?>\n\t%cursor%\n<? } ?>
pforeach=<? foreach (%cursor% as %cursor%) { ?>\n\t%cursor%\n<? } ?>
pif=<? if (%cursor%) { ?>\n\t%cursor%\n<? } ?>
piff=<?= %cursor% ? %cursor% : %cursor%; ?>
pv=<?=%cursor%?>%cursor%
p=<?%cursor%?>%cursor%

microtime=$start = microtime(true);\n%cursor%\n$time = microtime(true) - $start;\nprint("%cursor% $time\\n");%cursor%
count=count(%cursor%)%cursor%
l=require_once('/home/yangdav/util.php');\ndylog('%cursor%',%cursor%);%cursor%
lm=require_once('/home/yangdav/util.php');\ndylogMethod($%cursor%,'%cursor%');%cursor%
xtr=xdebug_start_trace('/tmp/xdebug_trace');\n%cursor%\nxdebug_stop_trace();\n%cursor%

table=<table>\n\t<tr>\n\t\t<td>%cursor%</td>\n\t</tr>\n</table>
d=<div%cursor%>\n\t%cursor%\n</div>%cursor%
id=<div%cursor%>%cursor%</div>%cursor%
c=class="%cursor%"%cursor%
i=id="%cursor%"%cursor%
s=style="%cursor%"%cursor%
na=name="%cursor%"%cursor%
hr=href="%cursor%"%cursor%
sdn=style="display: none"
cl=<div class="clear"></div>
clear=<div class="clear"></div>
style=<style>\n\t%cursor%\n</style>%cursor%
script=<script>\n\t%cursor%\n</script>%cursor%
text=<input type="text" maxlength="%cursor%"%cursor%>%cursor%
textarea=<textarea%cursor%>\n\t%cursor%\n</textarea>
check=<input type="checkbox"%cursor%>%cursor%
radio=<input type="radio"%cursor%>%cursor%
hidden=<input type="hidden"%cursor%>%cursor%
select=<select%cursor%>\n\t%cursor%\n</select>%cursor%
option=<option value="%cursor%">%cursor%</option>%cursor%
ul=<ul%cursor%>\n\t%cursor%\n</ul>%cursor%
ol=<ol%cursor%>\n\t%cursor%\n</ol>%cursor%
li=<li%cursor%>\n\t%cursor%\n</li>%cursor%
a=<a href="%cursor%"%cursor%>%cursor%</a>%cursor%
br=<br>
em=<em%cursor%>%cursor%</em>%cursor%
label=<label%cursor%>\n\t%cursor%\n</label>%cursor%
sub=<sub%cursor%>%cursor%</sub>%cursor%
sup=<sup%cursor%>%cursor%</sup>%cursor%
sp=<span%cursor%>%cursor%</span>%cursor%
img=<img src="%cursor%">%cursor%
p=<p>%cursor%
h1=<h1%cursor%>%cursor%</h1>%cursor%
h2=<h2%cursor%>%cursor%</h2>%cursor%
h3=<h3%cursor%>%cursor%</h3>%cursor%

[Javascript]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
try=try%block%\ncatch (%cursor%)%block_cursor%
f=function%cursor%(%cursor%) {\n\t%cursor%\n}%cursor%
4=$(%cursor%)%cursor%
4i=$('#%cursor%')%cursor%
4c=$('%cursor%')%cursor%
l=console.log(%cursor%)%cursor%
st=setTimeout(%cursor%, %cursor%)%cursor%
si=setInterval(%cursor%, %cursor%)%cursor%
cl=.click(%cursor%)%cursor%

[Python]
for=for i in xrange(%cursor%):\n\t%cursor%
if=if %cursor%:\n\t%cursor%
elif=elif %cursor%:\n\t%cursor%
else=else:\n\t%cursor%
while=while %cursor%:\n\t%cursor%
try=try:\n\t%cursor%\nexcept Exception, ex:\n\t
with=with %cursor%:\n\t%cursor%
def=def %cursor%(%cursor%):\n\t"""%cursor%"""\n\t%cursor%
class=class %cursor%:\n\t"""%cursor%"""\n\tdef __init__(self):\n\t\t%cursor%

[CSS]
di=display: %cursor%;%cursor%
w=width: %cursor%;%cursor%
h=height: %cursor%;%cursor%
ma=margin: %cursor%;%cursor%
pa=padding: %cursor%;%cursor%
fl=float: %cursor%;%cursor%
ov=overflow: %cursor%;%cursor%

po=position: %cursor%;%cursor%
to=top: %cursor%;%cursor%
bo=bottom: %cursor%;%cursor%
le=left: %cursor%;%cursor%
ri=right: %cursor%;%cursor%
zi=z-index: %cursor%;%cursor%

ff=font-family: %cursor%;%cursor%
fs=font-size: %cursor%;%cursor%
fw=font-weight: %cursor%;%cursor%
co=color: %cursor%;%cursor%
lh=line-height: %cursor%;%cursor%
ta=text-align: %cursor%;%cursor%

bc=background-color: #%cursor%;%cursor%
bi=background-image: %cursor%;%cursor%
bp=background-position: %cursor%;%cursor%
op=opacity: %cursor%;%cursor%
bo=border: %cursor%;%cursor%

bol=border-left: %cursor%;%cursor%
bot=border-top: %cursor%;%cursor%
bob=border-bottom: %cursor%;%cursor%
bor=border-top: %cursor%;%cursor%

noline=text-decoration: none;
line=text-decoration: underline;
lc=text-transform: lowercase;
uc=text-transform: uppercase;
sc=font-variant: small-caps;

cu=cursor: pointer;
br=border-radius: %cursor%;%cursor%
bs=box-shadow: %cursor%;%cursor%
ts=text-shadow: %cursor%;%cursor%
gr=background: url(data:image/svg+xml;base64,%cursor%);\nbackground: -o-linear-gradient(top, %cursor%, %cursor%);\nbackground: -moz-linear-gradient(top, %cursor%, %cursor%);\nbackground: -webkit-gradient(linear, left top, left bottom, color-stop(0, %cursor%), color-stop(1, %cursor%));\n*background: transparent;\nfilter: progid:DXImageTransform.Microsoft.Gradient(GradientType=0,StartColorStr=#%cursor%,EndColorStr=#%cursor%);\n-ms-filter: "progid:DXImageTransform.Microsoft.Gradient(GradientType=0,StartColorStr=#%cursor%,EndColorStr=#%cursor%)";*zoom: 1;
z=*zoom: 1;


###############################################################

# Optional keybindings to insert snippets
# Note: these can be overridden by Geany's configurable keybindings
[Keybindings]
#for=<Ctrl>7

[C]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%

[C++]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (int i = 0; i < %cursor%; i++)%brace_open%\n%brace_close%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
try=try%block%\ncatch (%cursor%)%block_cursor%

[Java]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (int i = 0; i < %cursor%; i++)%brace_open%\n%cursor%%brace_close%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
try=try%block%\ncatch (%cursor%)%block_cursor%

[C#]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
try=try%block%\ncatch (%cursor%)%block_cursor%

[Vala]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
try=try%block%\ncatch (%cursor%)%block_cursor%

[ActionScript]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
try=try%block%\ncatch (%cursor%)%block_cursor%

[Ferite]
iferr=iferr%block_cursor%fix%block%
monitor=monitor%block_cursor%handle%block%

[Haskell]

[HTML]
table=<table>\n\t<tr>\n\t\t<td>%cursor%</td>\n\t</tr>\n</table>
d=<div%cursor%>\n\t%cursor%\n</div>%cursor%
id=<div%cursor%>%cursor%</div>%cursor%
c=class="%cursor%"%cursor%
i=id="%cursor%"%cursor%
s=style="%cursor%"%cursor%
na=name="%cursor%"%cursor%
hr=href="%cursor%"%cursor%
sdn=style="display: none"
cl=<div class="clear"></div>
clear=<div class="clear"></div>
style=<style>\n\t%cursor%\n</style>%cursor%
script=<script>\n\t%cursor%\n</script>%cursor%
text=<input type="text" maxlength="%cursor%"%cursor%>%cursor%
textarea=<textarea%cursor%>%cursor%</textarea>
check=<input type="checkbox"%cursor%>%cursor%
radio=<input type="radio"%cursor%>%cursor%
hidden=<input type="hidden"%cursor%>%cursor%
select=<select%cursor%>\n\t%cursor%\n</select>%cursor%
option=<option value="%cursor%">%cursor%</option>%cursor%
ul=<ul%cursor%>\n\t%cursor%\n</ul>%cursor%
ol=<ol%cursor%>\n\t%cursor%\n</ol>%cursor%
li=<li%cursor%>\n\t%cursor%\n</li>%cursor%
a=<a href="%cursor%"%cursor%>%cursor%</a>%cursor%
br=<br>
em=<em%cursor%>%cursor%</em>%cursor%
label=<label %cursor%>\n\t%cursor%\n</label>%cursor%
sub=<sub%cursor%>%cursor%</sub>%cursor%
sup=<sup%cursor%>%cursor%</sup>%cursor%
sp=<span%cursor%>%cursor%</span>%cursor%
img=<img src="%cursor%">%cursor%
p=<p>%cursor%
h1=<h1%cursor%>%cursor%</h1>%cursor%
h2=<h2%cursor%>%cursor%</h2>%cursor%
h3=<h3%cursor%>%cursor%</h3>%cursor%
